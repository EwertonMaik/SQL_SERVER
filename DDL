-- DDL – Linguagem de Definição de Dados

-- Criação Tabela + campo com DEFAULT + Index Primary Key
CREATE TABLE [dbo].[Produto](
	[id_prod] [int] NOT NULL,
	[nm_prod] [varchar](100) NOT NULL,
	[id_cat_prod] [int] NOT NULL,
	[dt_cad_prod] [datetime] NOT NULL CONSTRAINT [DF_Produto_dt_cad_prod] DEFAULT GETDATE(),
  CONSTRAINT [IX_Produto_id_prod] PRIMARY KEY CLUSTERED 
  (
	  [id_prod] ASC
  ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

-- Este Alter é para adicionar um Campo DEFAULT na Tabela, caso ela seja adicionado após a criação e não especificado na coluna, como exemplo anterior.
ALTER TABLE [dbo].[Produto] ADD  CONSTRAINT [DF_Produto_dt_cad_prod]  DEFAULT (getdate()) FOR [dt_cad_prod]
GO

-- Criando uma 2ª Tabela, Definindo o Id da Tabela Pai como Clustered e após o Id da tabela filha Index Nonclustered
CREATE TABLE [dbo].[ListaProduto] (
	[id_listprod] [int] NOT NULL,
	[id_prod] [int] NOT NULL,
	[qtd] [int] NOT NULL,
	CONSTRAINT [IX_ListaProduto_id_prod] PRIMARY KEY CLUSTERED
	( [id_prod] ASC )
	WITH ( PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON,
	       ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

-- Criando Index Nonclustered para o campo Id da tabela Filho
CREATE NONCLUSTERED INDEX [IX_ListaProduto_id_listprod] ON [dbo].[ListaProduto]
(
	[id_listprod] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO

-- Exclusão da Tabela
DROP TABLE [dbo].[Produto]
GO

-- Criado um FileGroup que é uma Orgazinação Logica do SQL Server
ALTER DATABASE [TestDB] ADD FILEGROUP [INDEX]
GO

--Associar esse FileGroup a um arquivo Fisico do Banco de Dados
ALTER DATABASE [TestDB] ADD FILE ( NAME = N'INDEX', FILENAME = N'C:\SQLSERVER2019\Microsoft SQL Server\MSSQL15.MSSQLSERVER_01\MSSQL\DATA\BD\Index.ndf' , SIZE = 8192KB , FILEGROWTH = 65536KB ) TO FILEGROUP [INDEX]
GO

-- Procedure com parametro entrada para Interir Dados na Tabela
ALTER PROCEDURE dbo.add_produto
	@nm_prod VARCHAR(100),
	@id_cat_prod INT
AS
	SET NOCOUNT ON;

	INSERT INTO [dbo].[Produto] (nm_prod, id_cat_prod) VALUES (@nm_prod, @id_cat_prod);
GO

-- Procedure para pesquisar produtos na tabela
CREATE PROCEDURE dbo.find_produto
	@nm_prod VARCHAR(100)
AS
	SET NOCOUNT ON;
	select * from dbo.Produto where nm_prod = @nm_prod;
GO

-- Procedure para Excluir cadastro de Produto
CREATE PROCEDURE dbo.del_produto
	@id_prod INT
AS
	SET NOCOUNT ON;
	DELETE FROM dbo.Produto where id_prod = @id_prod;
GO

-- Procedure para Atualizar um Produto
CREATE PROCEDURE dbo.update_prod
	@id_prod INT,
	@nm_prod VARCHAR(100)
AS
	SET NOCOUNT ON;
	UPDATE dbo.Produto set nm_prod = @nm_prod where id_prod = @id_prod;
GO

-- VIEW visualização da tabela de Produtos
CREATE VIEW dbo.view_produtos
AS
select * from dbo.Produto;
GO

-- VIEW MATERIALIZED
CREATE MATERIALIZED VIEW dbo.materialized_view_produtos 
AS
SELECT id_prod, nm_prod FROM dbo.Produto
GO

REFRESH MATERIALIZED VIEW EmployeeConfid2;

-- Habilitando nivel de sua sessão transações implicitas
SET IMPLICIT_TRANSACTIONS ON
GO
